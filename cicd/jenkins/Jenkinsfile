pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/example/ai-logbook-analysis.git'
      }
    }
    stage('Lint') {
      steps {
        sh 'flake8 backend'
        sh 'npm run lint --prefix frontend'
      }
    }
    stage('Static Analysis') {
      steps {
        sh 'sonar-scanner'
      }
    }
    stage('Security Scan') {
      steps {
        sh 'checkov -d infrastructure --soft-fail'
        sh 'trivy fs infrastructure --exit-code 0'
      }
    }
    stage('Build') {
      steps {
        sh 'docker build -t ai-logbook-backend backend/services/ingestion'
        sh 'npm run build --prefix frontend'
      }
    }
    stage('Test') {
      steps {
        sh 'pytest backend/services/ingestion/tests'
        sh 'npm test --prefix frontend'
      }
    }
    stage('Deploy Infrastructure') {
      steps {
        dir('infrastructure') {
          sh 'terraform init'
          sh 'terraform apply -var-file=environments/dev/variables.tfvars -auto-approve'
        }
      }
    }
    stage('Deploy Application') {
      steps {
        sh 'aws lambda update-function-code --function-name ingestion-dev --s3-bucket ai-logbook-data-dev --s3-key ingestion.zip --region us-east-1'
        sh 'aws s3 sync frontend/build s3://frontend-bucket'
      }
    }
    stage('Security Validation') {
      steps {
        sh 'aws configservice describe-compliance-by-config-rule'
      }
    }
    stage('Notify') {
      steps {
        sh 'aws sns publish --topic-arn arn:aws:sns:us-east-1:123456789012:logbook-notifications-dev --message "Build completed" --region us-east-1'
      }
    }
  }
}
